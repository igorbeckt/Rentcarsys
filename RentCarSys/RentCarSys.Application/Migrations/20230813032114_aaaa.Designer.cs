// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentCarSys.Application.Data;

#nullable disable

namespace RentCarSys.Application.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20230813032114_aaaa")]
    partial class aaaa
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Localdorateste.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("CPF")
                        .HasColumnType("bigint")
                        .HasColumnName("CPF");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME_COMPLETO");

                    b.Property<long>("RG")
                        .HasColumnType("bigint")
                        .HasColumnName("RG");

                    b.Property<int?>("ReservaId")
                        .HasColumnType("int")
                        .HasColumnName("RESERVA_ID");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("CLIENTE_STATUS");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId");

                    b.ToTable("CLIENTE", (string)null);
                });

            modelBuilder.Entity("Localdorateste.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DataEntrega")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DATA_ENTREGA");

                    b.Property<string>("DataReserva")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DATA_RESERVA");

                    b.Property<string>("DataRetirada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DATA_RETIRADA");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("RESERVA_STATUS");

                    b.Property<double>("ValorLocacao")
                        .HasColumnType("float")
                        .HasColumnName("VALOR_LOCACAO");

                    b.HasKey("Id");

                    b.ToTable("RESERVA", (string)null);
                });

            modelBuilder.Entity("Localdorateste.Models.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnoFabricacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ANO_FABRICACAO");

                    b.Property<string>("Automatico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AUTOMATICO");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("COR");

                    b.Property<string>("KM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KM");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MARCA");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MODELO");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PLACA");

                    b.Property<int>("QuantidadePortas")
                        .HasColumnType("int");

                    b.Property<int?>("ReservaId")
                        .HasColumnType("int")
                        .HasColumnName("RESERVA_ID");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("VEICULO_STATUS");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId");

                    b.ToTable("VEICULO", (string)null);
                });

            modelBuilder.Entity("Localdorateste.Models.Cliente", b =>
                {
                    b.HasOne("Localdorateste.Models.Reserva", "Reserva")
                        .WithMany("Cliente")
                        .HasForeignKey("ReservaId")
                        .HasConstraintName("FK_REFERENCE_CLIENTE_RESERVA");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Localdorateste.Models.Veiculo", b =>
                {
                    b.HasOne("Localdorateste.Models.Reserva", "Reserva")
                        .WithMany("Veiculo")
                        .HasForeignKey("ReservaId")
                        .HasConstraintName("FK_REFERENCE_VEICULO_RESERVA");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Localdorateste.Models.Reserva", b =>
                {
                    b.Navigation("Cliente");

                    b.Navigation("Veiculo");
                });
#pragma warning restore 612, 618
        }
    }
}
